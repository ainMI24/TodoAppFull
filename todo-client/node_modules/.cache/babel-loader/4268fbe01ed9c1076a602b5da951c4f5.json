{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER_MUTATION = gql`\nmutation Mutation($userLoginEMail: String!) {\n  userLogin(eMail: $userLoginEMail) {\n    id\n    email\n  }\n}\n`;\n\nfunction LoginForm() {\n  _s();\n\n  const history = useHistory();\n  let input;\n  const [addUser, {\n    data,\n    loading,\n    error\n  }] = useMutation(CREATE_USER_MUTATION);\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: \"/logo.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), \" Log-in to your account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"E-mail address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"lock\",\n            iconPosition: \"left\",\n            placeholder: \"Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"teal\",\n            fluid: true,\n            size: \"large\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"New to us? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"F+hW43AmFJRW/EgquSqyC+WRrZA=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Login/Login.js"],"names":["React","useState","useMutation","gql","Button","Form","Grid","Header","Segment","useHistory","v4","uuidv4","CREATE_USER_MUTATION","LoginForm","history","input","addUser","data","loading","error","message","height","maxWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAEA,MAAMC,oBAAoB,GAAGT,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASU,SAAT,GAAqB;AAAA;;AAEnB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,MAAIM,KAAJ;AACA,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAV,IAAsCjB,WAAW,CAACU,oBAAD,CAAvD;AAEA,MAAIM,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,qBAAoBA,KAAK,CAACC,OAAQ,EAA1C;AAEX,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAhC;AAAqD,IAAA,aAAa,EAAC,QAAnE;AAAA,2BACA,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAApB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,QAAvC;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,OAAO,MAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,MAAjB;AAAkB,YAAA,IAAI,EAAC,MAAvB;AAA8B,YAAA,YAAY,EAAC,MAA3C;AAAkD,YAAA,WAAW,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,YAAY,EAAC,MAHf;AAIE,YAAA,WAAW,EAAC,UAJd;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAqB,YAAA,KAAK,MAA1B;AAA2B,YAAA,IAAI,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAoBE,QAAC,OAAD;AAAA,+CACa;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAtCQT,S;UAESJ,U,EAE4BP,W;;;KAJrCW,S;AAuCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql} from \"@apollo/client\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst CREATE_USER_MUTATION = gql`\r\nmutation Mutation($userLoginEMail: String!) {\r\n  userLogin(eMail: $userLoginEMail) {\r\n    id\r\n    email\r\n  }\r\n}\r\n`;\r\n\r\nfunction LoginForm() {\r\n\r\n  const history = useHistory();\r\n  let input;\r\n  const [addUser, { data, loading, error }] = useMutation(CREATE_USER_MUTATION);\r\n\r\n  if (loading) return 'Submitting...';\r\n  if (error) return `Submission error! ${error.message}`;\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='teal' textAlign='center'>\r\n        <Image src='/logo.png' /> Log-in to your account\r\n      </Header>\r\n      <Form size='large'>\r\n        <Segment stacked>\r\n          <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\r\n          <Form.Input\r\n            fluid\r\n            icon='lock'\r\n            iconPosition='left'\r\n            placeholder='Password'\r\n            type='password'\r\n          />\r\n\r\n          <Button color='teal' fluid size='large'>\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n      <Message>\r\n        New to us? <a href='#'>Sign Up</a>\r\n      </Message>\r\n    </Grid.Column>\r\n  </Grid>\r\n  );\r\n\r\n}\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}