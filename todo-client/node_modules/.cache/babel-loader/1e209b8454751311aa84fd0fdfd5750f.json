{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LOGIN_USER = gql`\nmutation Mutation($userLoginEMail: String!) {\n  userLogin(eMail: $userLoginEMail) {\n    id\n    email\n  }\n}\n`;\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  let input;\n  const [login, {\n    loading,\n    error,\n    data\n  }] = useMutation(LOGIN_USER);\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`;\n  console.log(error, login);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      \"data-testid\": \"login-input\",\n      onSubmit: e => {\n        e.preventDefault();\n\n        if (!input.value.trim()) {\n          return;\n        }\n\n        input.value = \" \";\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addUser,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"jpF6hUa5NxkN2JL3Q2i6F7t9kIE=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Login/Login.js"],"names":["React","useState","useMutation","gql","Button","Form","Grid","Header","Segment","useHistory","v4","uuidv4","LOGIN_USER","Login","history","input","login","loading","error","data","message","console","log","e","preventDefault","value","trim","addUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAGA,OAAO,MAAMC,UAAU,GAAGT,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;;AASP,SAASU,KAAT,GAAiB;AAAA;;AAEf,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACC,MAAIM,KAAJ;AAED,QAAM,CAACC,KAAD,EAAQ;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAR,IAAmCjB,WAAW,CAACU,UAAD,CAApD;AAGA,MAAIK,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,qBAAoBA,KAAK,CAACE,OAAQ,EAA1C;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBF,KAAnB;AAEA,sBACE;AAAA,2BACE;AACA,MAAA,QAAQ,MADR;AAEM,MAAA,IAAI,EAAC,OAFX;AAGM,MAAA,IAAI,EAAC,OAHX;AAIM,MAAA,WAAW,EAAC,OAJlB;AAKM,qBAAY,aALlB;AAMM,MAAA,QAAQ,EAAGO,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;;AACA,YAAI,CAACT,KAAK,CAACU,KAAN,CAAYC,IAAZ,EAAL,EAAwB;AACtB;AACD;;AAEDX,QAAAA,KAAK,CAACU,KAAN,GAAa,GAAb;AACD,OAbP;AAAA,8BAcE;AAAA;AAAA;AAAA;AAAA,cAdF,eAkBE;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAtCQd,K;UAESJ,U,EAGyBP,W;;;KALlCW,K;AAuCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql} from \"@apollo/client\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nexport const LOGIN_USER = gql`\r\nmutation Mutation($userLoginEMail: String!) {\r\n  userLogin(eMail: $userLoginEMail) {\r\n    id\r\n    email\r\n  }\r\n}\r\n`;\r\n\r\nfunction Login() {\r\n\r\n  const history = useHistory();\r\n   let input;\r\n  \r\n  const [login, {loading, error, data }] = useMutation(LOGIN_USER);\r\n  \r\n \r\n  if (loading) return 'Submitting...';\r\n  if (error) return `Submission error! ${error.message}`;\r\n\r\n  console.log(error, login);\r\n  \r\n  return (\r\n    <div>\r\n      <form \r\n      required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            data-testid=\"login-input\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              if (!input.value.trim()){\r\n                return;\r\n              }\r\n\r\n              input.value= \" \";\r\n            }}>\r\n        <input \r\n            \r\n            >\r\n        </input>\r\n        <button onClick={addUser}>Log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}