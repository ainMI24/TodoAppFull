{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER_MUTATION = gql`\nmutation Mutation($userLoginEMail: String!) {\n  userLogin(eMail: $userLoginEMail) {\n    id\n    email\n  }\n}\n`;\n\nfunction LoginForm() {\n  _s();\n\n  const history = useHistory();\n  let input;\n  const [addUser, {\n    data,\n    loading,\n    error\n  }] = useMutation(CREATE_USER_MUTATION);\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`;\n  console.log(data, loading, error);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"red\",\n        textAlign: \"center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\",\n        onSubmit: e => {\n          if (!loading) {\n            e.preventDefault();\n            input.value = '';\n            addUser({\n              variables: {\n                email: input.value\n              }\n            });\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          fluid: true,\n          size: \"large\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"F+hW43AmFJRW/EgquSqyC+WRrZA=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Login/Login.js"],"names":["React","useState","useMutation","gql","Button","Form","Grid","Header","Segment","useHistory","v4","uuidv4","CREATE_USER_MUTATION","LoginForm","history","input","addUser","data","loading","error","message","console","log","height","maxWidth","e","preventDefault","value","variables","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAEA,MAAMC,oBAAoB,GAAGT,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASU,SAAT,GAAqB;AAAA;;AAEnB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,MAAIM,KAAJ;AACA,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAV,IAAsCjB,WAAW,CAACU,oBAAD,CAAvD;AAEA,MAAIM,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,qBAAoBA,KAAK,CAACC,OAAQ,EAA1C;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAiBC,OAAjB,EAAyBC,KAAzB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAhC;AAAqD,IAAA,aAAa,EAAC,QAAnE;AAAA,2BACA,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAApB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,KAAtB;AAA4B,QAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,YAAY,EAAC,MAAlD;AAAyD,QAAA,WAAW,EAAC,gBAArE;AAAsF,QAAA,QAAQ,EAAEC,CAAC,IAAI;AAC/F,cAAI,CAACP,OAAL,EAAc;AACZO,YAAAA,CAAC,CAACC,cAAF;AACAX,YAAAA,KAAK,CAACY,KAAN,GAAc,EAAd;AACAX,YAAAA,OAAO,CAAC;AAAEY,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,KAAK,EAAEd,KAAK,CAACY;AAAf;AAAb,aAAD,CAAP;AACD;AACA,SANP;AAAA,gCAOE,QAAC,OAAD;AAAS,UAAA,OAAO;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAoB,UAAA,KAAK,MAAzB;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GArCQd,S;UAESJ,U,EAE4BP,W;;;KAJrCW,S;AAsCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql} from \"@apollo/client\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst CREATE_USER_MUTATION = gql`\r\nmutation Mutation($userLoginEMail: String!) {\r\n  userLogin(eMail: $userLoginEMail) {\r\n    id\r\n    email\r\n  }\r\n}\r\n`;\r\n\r\nfunction LoginForm() {\r\n\r\n  const history = useHistory();\r\n  let input;\r\n  const [addUser, { data, loading, error }] = useMutation(CREATE_USER_MUTATION);\r\n\r\n  if (loading) return 'Submitting...';\r\n  if (error) return `Submission error! ${error.message}`;\r\n  console.log(data,loading,error);\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='red' textAlign='center'>\r\n        Login\r\n      </Header>\r\n\r\n      <Form size='large' fluid icon='user' iconPosition='left' placeholder='E-mail address' onSubmit={e => {\r\n            if (!loading) {\r\n              e.preventDefault();\r\n              input.value = '';\r\n              addUser({ variables: { email: input.value } });\r\n            }\r\n            }}>\r\n        <Segment stacked\r\n          />\r\n          \r\n          <Button color='red' fluid size='large' type=\"submit\">\r\n            Login\r\n          </Button>\r\n        \r\n      </Form>\r\n\r\n    </Grid.Column>\r\n  </Grid>\r\n  );\r\n\r\n}\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}