{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER_MUTATION = gql`\n  mutation Mutation($userLoginEMail: String!) {\n  userLogin(eMail: $userLoginEMail) {\n    id\n    email\n  }\n}\n`;\n\nfunction LoginForm() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [createUser, {\n    loading,\n    error\n  }] = useMutation(CREATE_USER_MUTATION);\n\n  const addUser = eMail => {\n    createUser({\n      variables: {\n        id: uuidv4(),\n        email: email\n      }\n    });\n    if (loading) return 'Submitting...';\n    if (error) return `Submission error! ${error.message}`;\n    history.push(\"/todos\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"red\",\n        textAlign: \"center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"mail\",\n            iconPosition: \"left\",\n            placeholder: \"Email\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            fluid: true,\n            size: \"large\",\n            onClick: addUser,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"92VgjdWwuLFuK5d6tNnMMhtBtJI=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Login/Login.js"],"names":["React","useState","useMutation","gql","Button","Form","Grid","Header","Segment","useHistory","v4","uuidv4","CREATE_USER_MUTATION","LoginForm","history","email","setEmail","createUser","loading","error","addUser","eMail","variables","id","message","push","height","maxWidth","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAEA,MAAMC,oBAAoB,GAAGT,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASU,SAAT,GAAqB;AAAA;;AAEnB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACgB,UAAD,EAAa;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAb,IAAiCjB,WAAW,CAACU,oBAAD,CAAlD;;AAEA,QAAMQ,OAAO,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,UAAU,CAAC;AACTK,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAEZ,MAAM,EADD;AAETI,QAAAA,KAAK,EAAEA;AAFE;AADF,KAAD,CAAV;AAOF,QAAIG,OAAJ,EAAa,OAAO,eAAP;AACb,QAAIC,KAAJ,EAAW,OAAQ,qBAAoBA,KAAK,CAACK,OAAQ,EAA1C;AACTV,IAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACD,GAXD;;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAhC;AAAqD,IAAA,aAAa,EAAC,QAAnE;AAAA,2BACA,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAApB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,KAAtB;AAA4B,QAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA,+BACE,QAAC,OAAD;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACA,YAAA,KAAK,MADL;AACM,YAAA,IAAI,EAAC,MADX;AAEA,YAAA,YAAY,EAAC,MAFb;AAGA,YAAA,WAAW,EAAC,OAHZ;AAIA,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACfZ,cAAAA,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AAND;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAoB,YAAA,KAAK,MAAzB;AAA0B,YAAA,IAAI,EAAC,OAA/B;AAAuC,YAAA,OAAO,EAAEV,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5CQP,S;UAESJ,U,EAGuBP,W;;;KALhCW,S;AA6CT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql} from \"@apollo/client\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst CREATE_USER_MUTATION = gql`\r\n  mutation Mutation($userLoginEMail: String!) {\r\n  userLogin(eMail: $userLoginEMail) {\r\n    id\r\n    email\r\n  }\r\n}\r\n`;\r\n\r\nfunction LoginForm() {\r\n\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  \r\n  const [createUser, {loading, error}] = useMutation(CREATE_USER_MUTATION);\r\n\r\n  const addUser = (eMail) => {\r\n    createUser({\r\n      variables: {\r\n        id: uuidv4(),\r\n        email: email,\r\n      },\r\n    });\r\n\r\n  if (loading) return 'Submitting...';\r\n  if (error) return `Submission error! ${error.message}`;\r\n    history.push(\"/todos\");\r\n  };\r\n  \r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='red' textAlign='center'>\r\n        Login\r\n      </Header>\r\n      <Form size='large'>\r\n        <Segment>\r\n          <Form.Input \r\n          fluid icon='mail' \r\n          iconPosition='left' \r\n          placeholder='Email'\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }} \r\n          />\r\n          <Button color='red' fluid size='large' onClick={addUser} >\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n    </Grid.Column>\r\n  </Grid>\r\n  );\r\n}\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}