{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Search\\\\SearchTodo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './search.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOAD_NOTES = gql`\n  query Query {\n  getNotes {\n    id\n    todo\n    status\n  }\n}`;\n\nfunction SearchTodo() {\n  _s();\n\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LOAD_NOTES);\n  useEffect(() => {\n    if (!loading) {\n      const results = data.getNotes.filter(item => item.todo.toLowerCase().includes(searchText.toLowerCase()));\n      setSearchResults(results);\n    }\n  }, [loading, searchText]);\n  console.log(searchResults);\n\n  const handleChange = e => {\n    setSearchText(e.target.value);\n  };\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: searchText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), searchR]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchTodo, \"SuVsRhEGlBm6xh9ICT/8UMCUYjQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchTodo;\nexport default SearchTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchTodo\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Search/SearchTodo.js"],"names":["React","useState","useEffect","useQuery","gql","LOAD_NOTES","SearchTodo","searchText","setSearchText","searchResults","setSearchResults","loading","error","data","results","getNotes","filter","item","todo","toLowerCase","includes","console","log","handleChange","e","target","value","message","searchR"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAO,cAAP;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAEA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,EAPA;;AASA,SAASE,UAAT,GAAsB;AAAA;;AAEpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBV,QAAQ,CAACE,UAAD,CAAvC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,OAAL,EAAc;AACZ,YAAMG,OAAO,GAAGD,IAAI,CAACE,QAAL,CAAcC,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCb,UAAU,CAACY,WAAX,EAAjC,CAA7B,CAAhB;AACAT,MAAAA,gBAAgB,CAACI,OAAD,CAAhB;AACD;AACF,GALQ,EAKN,CAACH,OAAD,EAAUJ,UAAV,CALM,CAAT;AAOAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;;AACA,QAAMc,YAAY,GAAGC,CAAC,IAAI;AACxBhB,IAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,MAAIf,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACe,OAAQ,EAA/B;AAEX,sBACE;AAAA,2BACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,KAAK,EAAEpB,UAHT;AAIE,QAAA,QAAQ,EAAEgB;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,EAOGK,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAxCQtB,U;UAKwBH,Q;;;KALxBG,U;AA0CT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect} from 'react';\r\nimport './search.css';\r\nimport {useQuery, gql} from '@apollo/client';\r\n\r\nconst LOAD_NOTES = gql`\r\n  query Query {\r\n  getNotes {\r\n    id\r\n    todo\r\n    status\r\n  }\r\n}`;\r\n\r\nfunction SearchTodo (){\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const {loading, error, data} = useQuery(LOAD_NOTES);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const results = data.getNotes.filter(item => item.todo.toLowerCase().includes(searchText.toLowerCase()));\r\n      setSearchResults(results);\r\n    }\r\n  }, [loading, searchText]);\r\n\r\n  console.log(searchResults);\r\n  const handleChange = e => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type='text'\r\n          placeholder='Search...'\r\n          value={searchText}\r\n          onChange={handleChange}\r\n        />\r\n        {searchR}\r\n        {/* <ul>\r\n        {searchResults.map(item => (\r\n          <li>{item.todo}{item.status}</li>\r\n        ))}\r\n      </ul> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchTodo;\r\n"]},"metadata":{},"sourceType":"module"}