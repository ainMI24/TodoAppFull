{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LOGIN_USER = gql`\nmutation Mutation($userLoginEMail: String!) {\n  userLogin(eMail: $userLoginEMail) {\n    id\n    email\n  }\n}\n`;\n\nconst handleButtonClick = event => {\n  window.location.reload();\n\n  if (todoValue != null) {\n    const newItem = {\n      id: uuidv4(),\n      todo: todoValue,\n      status: false\n    };\n    console.log(newItem);\n    console.log(newItem.id);\n    setTodoValue(\"\");\n  } else {}\n};\n\nconst handleKeyPress = e => {\n  if (e.key === 'Enter') {\n    handleButtonClick();\n  }\n};\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\" \");\n  const [login, {\n    loading,\n    error\n  }] = useMutation(LOGIN_USER);\n  error(apolloError); // from async try/catch, onError method, or a promise .catch\n\n  console.log(error instanceof Error); // if (loading) return 'Submitting...';\n  // if (error) return `Submission error! ${error.message}`;\n\n  console.log(error, login);\n\n  const addUser = () => {\n    login({\n      variables: {\n        userLogin: {\n          eMail: email\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        \"data-testid\": \"login-input\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addUser,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"T0UXh50IL/UgxcRAvcI8OVx0wk4=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Login/Login.js"],"names":["React","useState","useMutation","gql","Button","Form","Grid","Header","Segment","useHistory","v4","uuidv4","LOGIN_USER","handleButtonClick","event","window","location","reload","todoValue","newItem","id","todo","status","console","log","setTodoValue","handleKeyPress","e","key","Login","history","email","setEmail","login","loading","error","apolloError","Error","addUser","variables","userLogin","eMail","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAGA,OAAO,MAAMC,UAAU,GAAGT,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;;AASP,MAAMU,iBAAiB,GAAIC,KAAD,IAAW;AACnCC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;;AAGA,MAAIC,SAAS,IAAI,IAAjB,EAAuB;AACrB,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAET,MAAM,EADI;AAEdU,MAAAA,IAAI,EAAEH,SAFQ;AAGdI,MAAAA,MAAM,EAAE;AAHM,KAAhB;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACC,EAApB;AAEAK,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAbD,MAcK,CAEJ;AACF,CArBD;;AAuBA,MAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,MAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBf,IAAAA,iBAAiB;AAClB;AACF,CAJD;;AAUA,SAASgB,KAAT,GAAiB;AAAA;;AAGf,QAAMC,OAAO,GAAGrB,UAAU,EAA1B;AAEA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,GAAD,CAAlC;AAEA,QAAM,CAACgC,KAAD,EAAQ;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAR,IAA6BjC,WAAW,CAACU,UAAD,CAA9C;AAEAuB,EAAAA,KAAK,CAACC,WAAD,CAAL,CATe,CASK;;AAEpBb,EAAAA,OAAO,CAACC,GAAR,CAAYW,KAAK,YAAYE,KAA7B,EAXe,CAYf;AACA;;AAEAd,EAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ,EAAmBF,KAAnB;;AAEA,QAAMK,OAAO,GAAG,MAAM;AACpBL,IAAAA,KAAK,CAAC;AACJM,MAAAA,SAAS,EAAE;AACTC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAEV;AADE;AADF;AADP,KAAD,CAAL;AAOD,GARD;;AAUA,sBACE;AAAA,2BACE;AAAA,8BACE;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,uBAAY,aALhB;AAMI,QAAA,QAAQ,EAAGJ,CAAD,IAAO;AAACK,UAAAA,QAAQ,CAACL,CAAC,CAACe,MAAF,CAASC,KAAV,CAAR;AAAyB;AAN/C;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CQT,K;UAGSpB,U,EAImBP,W;;;KAP5B2B,K;AA4CT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql} from \"@apollo/client\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nexport const LOGIN_USER = gql`\r\nmutation Mutation($userLoginEMail: String!) {\r\n  userLogin(eMail: $userLoginEMail) {\r\n    id\r\n    email\r\n  }\r\n}\r\n`;\r\n\r\nconst handleButtonClick = (event) => {\r\n  window.location.reload();\r\n\r\n\r\n  if (todoValue != null) {\r\n    const newItem = {\r\n      id: uuidv4(),\r\n      todo: todoValue,\r\n      status: false\r\n    };\r\n\r\n    \r\n\r\n    console.log(newItem)\r\n    console.log(newItem.id)\r\n\r\n    setTodoValue(\"\");\r\n  }\r\n  else {\r\n\r\n  }\r\n}\r\n\r\nconst handleKeyPress = (e) => {\r\n  if (e.key === 'Enter') {\r\n    handleButtonClick();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n  \r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\" \");\r\n  \r\n  const [login, {loading, error }] = useMutation(LOGIN_USER);\r\n  \r\n  error(apolloError); // from async try/catch, onError method, or a promise .catch\r\n\r\n  console.log(error instanceof Error);\r\n  // if (loading) return 'Submitting...';\r\n  // if (error) return `Submission error! ${error.message}`;\r\n\r\n  console.log(error, login);\r\n  \r\n  const addUser = () => {\r\n    login({\r\n      variables: {\r\n        userLogin: {\r\n          eMail: email,\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input \r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            data-testid=\"login-input\"\r\n            onChange={(e) => {setEmail(e.target.value)}}>\r\n        </input>\r\n        <button onClick={addUser}>Log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}