{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Todo\\\\todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./todo.css\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRAPHQL_API = 'http://localhost:4000/';\nexport default function Todo(props) {\n  _s();\n\n  const {\n    id,\n    todo,\n    status\n  } = props.item;\n  const [newValue, setNewValue] = useState(\"\");\n  const [idValue, setIdValue] = useState(\"\");\n  const [todoArray, setTodoArray] = useState([]);\n  useEffect(() => {\n    const query = `query Query {\n            getNotes {\n              id\n              todo\n              status\n            }\n        }`;\n    fetch(GRAPHQL_API, {\n      method: 'POST',\n      body: JSON.stringify({\n        query\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(result => {\n      setTodoArray(result.data.getNotes);\n    });\n  }, []); //handle input value\n\n  const handleInputChange = event => {\n    setNewValue(event.target.value);\n  };\n\n  const handleOnClick = event => {\n    setIdValue(event.target.id);\n  };\n\n  const editTodo = event => {\n    let id = idValue;\n    const editedTodo = todoArray.map(item => {\n      if (item.id == id) {\n        item.todo = newValue;\n        const query = `\n                mutation UpdateNotesMutation {\n                    updateNotes(iD: \"${id}\", toDo: \"${newValue}\") {\n                      id\n                      todo\n                      status\n                    }\n                  }\n                  `;\n        fetch(GRAPHQL_API, {\n          method: 'POST',\n          body: JSON.stringify({\n            query\n          }),\n          headers: {\n            'content-type': 'application/json'\n          }\n        }).then(response => response.json());\n      }\n    });\n    setTodoArray(editedTodo);\n  };\n\n  const handleKeyPress = id => {\n    if (id.key === 'Enter') {\n      if (todoArray) {\n        editTodo();\n        window.location.reload();\n      }\n    }\n  };\n\n  const getStyle = () => {\n    return {\n      cursor: \"pointer\",\n      textDecoration: status ? \"line-through\" : \"none\"\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-Item__form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => props.markComplete(id),\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        onChange: () => {},\n        checked: status,\n        id: id,\n        type: \"checkbox\",\n        label: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"todo-Item__title\",\n          style: getStyle(),\n          children: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this),\n        onClick: () => props.markComplete(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      className: \"todo-Item__input\",\n      onChange: handleInputChange,\n      onKeyDown: handleKeyPress,\n      onClick: handleOnClick,\n      placeholder: \"Edit Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"todo-Item__deleteBtn\",\n      \"data-dismiss\": \"alert\",\n      \"aria-label\": \"Close\",\n      onClick: () => props.delTodo(id),\n      style: {\n        cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"3EZFzz9rYZy9cIWZy/6Tb8QsY+s=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Todo/todo.js"],"names":["React","useState","useEffect","Form","GRAPHQL_API","Todo","props","id","todo","status","item","newValue","setNewValue","idValue","setIdValue","todoArray","setTodoArray","query","fetch","method","body","JSON","stringify","headers","then","response","json","result","data","getNotes","handleInputChange","event","target","value","handleOnClick","editTodo","editedTodo","map","handleKeyPress","key","window","location","reload","getStyle","cursor","textDecoration","markComplete","delTodo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst GRAPHQL_API = 'http://localhost:4000/';\r\n\r\nexport default function Todo(props) {\r\n    const { id, todo, status } = props.item;\r\n    const [newValue, setNewValue] = useState(\"\");\r\n    const [idValue, setIdValue] = useState(\"\");\r\n    const [todoArray, setTodoArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const query = `query Query {\r\n            getNotes {\r\n              id\r\n              todo\r\n              status\r\n            }\r\n        }`;\r\n\r\n        fetch(GRAPHQL_API, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                query\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }).then(response => response.json()).then(result => {\r\n            setTodoArray(result.data.getNotes);\r\n        });\r\n\r\n    }, []);\r\n\r\n    //handle input value\r\n    const handleInputChange = event => {\r\n        setNewValue(event.target.value);\r\n    };\r\n\r\n    const handleOnClick = event => {\r\n        setIdValue(event.target.id);\r\n    }\r\n\r\n    const editTodo = event => {\r\n        let id = idValue;\r\n\r\n        const editedTodo = todoArray.map(item => {\r\n            if (item.id == id) {\r\n                item.todo = newValue;\r\n\r\n                const query = `\r\n                mutation UpdateNotesMutation {\r\n                    updateNotes(iD: \"${id}\", toDo: \"${newValue}\") {\r\n                      id\r\n                      todo\r\n                      status\r\n                    }\r\n                  }\r\n                  `;\r\n\r\n                fetch(GRAPHQL_API, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        query\r\n                    }),\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                }).then(response => response.json());\r\n            }\r\n        })\r\n\r\n        setTodoArray(editedTodo);\r\n    }\r\n\r\n    const handleKeyPress = id => {\r\n\r\n        if (id.key === 'Enter') {\r\n\r\n            if (todoArray) {\r\n                editTodo();\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    const getStyle = () => {\r\n        return {\r\n            cursor: \"pointer\",\r\n            textDecoration: status ? \"line-through\" : \"none\"\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-Item__form\">\r\n            <div\r\n                key={id}\r\n                onClick={() => props.markComplete(id)}\r\n            >\r\n                <Form.Check\r\n                    custom\r\n                    onChange={() => { }}\r\n                    checked={status}\r\n                    id={id}\r\n                    type={\"checkbox\"}\r\n                    label={\r\n                        <strong className=\"todo-Item__title\" style={getStyle()}>{todo}</strong>\r\n                    }\r\n                    onClick={() => props.markComplete(id)}\r\n                >\r\n                </Form.Check>\r\n\r\n            </div>\r\n\r\n\r\n            <input id={id} className=\"todo-Item__input\" onChange={handleInputChange}\r\n                onKeyDown={handleKeyPress} onClick={handleOnClick} placeholder=\"Edit Here\" />\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"todo-Item__deleteBtn\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                onClick={() => props.delTodo(id)}\r\n                style={{ cursor: \"pointer\" }}\r\n            >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}