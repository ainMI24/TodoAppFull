{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TO-DO APP FULL\\\\PART CJ\\\\todo-client\\\\src\\\\component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport LoginForm from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LOGIN_USER = gql`\nmutation Mutation($userLoginEMail: String!) {\n  userLogin(eMail: $userLoginEMail) {\n    id\n    email\n    token\n  }\n}\n`;\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  const [login, {\n    loading,\n    error\n  }] = useMutation(LOGIN_USER);\n  const [email, setEmail] = useState[''];\n\n  onchange = e => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  onsubmit = e;\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`;\n  console.log(loading, error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        \"data-testid\": \"login-input\",\n        onChange: e => this.onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"RaW1VDVtkMeZpWVwflqXIe0hwIk=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TO-DO APP FULL/PART CJ/todo-client/src/component/Login/Login.js"],"names":["React","useState","useMutation","gql","Button","Form","Grid","Header","Segment","useHistory","v4","uuidv4","LoginForm","LOGIN_USER","Login","history","login","loading","error","email","setEmail","onchange","e","target","value","onsubmit","message","console","log","onSubmit","onChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,OAAO,MAAMC,UAAU,GAAGV,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;;AAUP,SAASW,KAAT,GAAiB;AAAA;;AAEf,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,KAAD,EAAQ;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAR,IAA6BhB,WAAW,CAACW,UAAD,CAA9C;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;;AAEAoB,EAAAA,QAAQ,GAAIC,CAAD,IAAO;AAChB,UAAMH,KAAK,GAAIG,CAAC,CAACC,MAAH,CAAWC,KAAzB;AACAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD;;AAKAM,EAAAA,QAAQ,GAAIH,CAAZ;AAEA,MAAIL,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,qBAAoBA,KAAK,CAACQ,OAAQ,EAA1C;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ,EAAoBC,KAApB;AAEA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKO,QAAL,CAAcP,CAAd,CAAvB;AAAA,8BACE;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,uBAAY,aALhB;AAMI,QAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKQ,QAAL,CAAcR,CAAd;AANrB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnCQR,K;UAESL,U,EAEmBP,W;;;KAJ5BY,K;AAoCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql} from \"@apollo/client\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport LoginForm from './LoginForm';\r\n\r\nexport const LOGIN_USER = gql`\r\nmutation Mutation($userLoginEMail: String!) {\r\n  userLogin(eMail: $userLoginEMail) {\r\n    id\r\n    email\r\n    token\r\n  }\r\n}\r\n`;\r\n\r\nfunction Login() {\r\n\r\n  const history = useHistory();\r\n  \r\n  const [login, {loading, error }] = useMutation(LOGIN_USER);\r\n\r\n  const [email, setEmail] = useState[''];\r\n\r\n  onchange = (e) => {\r\n    const email = (e.target).value;\r\n    setEmail(email);\r\n  }\r\n\r\n  onsubmit = (e)\r\n\r\n  if (loading) return 'Submitting...';\r\n  if (error) return `Submission error! ${error.message}`;\r\n  console.log(loading,error);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => this.onSubmit(e)}>\r\n        <input \r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            data-testid=\"login-input\"\r\n            onChange={(e) => this.onChange(e)}>\r\n        </input>\r\n        <button type=\"submit\">Log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}